{"version":3,"sources":["assets/images/logo.png","assets/svg/twitter.svg","assets/svg/facebook.svg","assets/svg/youtube.svg","assets/svg/instagram.svg","assets/svg/error-404.svg","store/constants/Users.js","store/helper.js","store/actions/Users.js","common/rules.js","pages/auth/login/Login.js","common/josn2csv.js","store/constants/Common.js","store/actions/Common.js","pages/reports/Reports.js","pages/patients/Patients.js","pages/patients/AddPatient.js","pages/users/Users.js","uiComponents/header/Header.js","uiComponents/footer/Footer.js","uiComponents/404/NotFound.js","uiComponents/body-with-header-and-footer/BodyWithHeaderAndFooter.js","uiComponents/loading/Loading.js","routing/index.js","App.js","serviceWorker.js","store/reducers/Common.js","store/reducers/Users.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","Users","CHECK_AUTH_API","LOGIN_USER_API","LOGOUT_USER_API","SET_LOGGED_IN_USER","UPDATE_LOGGED_IN_USER","GET_USERS_API","UPDATE_USER_API","ADD_USER_API","DELETE_USER_API","message","config","duration","maxCount","getTokenAndSetIntoHeaders","token","a","axios","defaults","headers","common","localStorage","getItem","accessToken","setTokenInToLocalStorage","value","setItem","alertError","JSON","stringify","removeTokenInToLocalStorageAndDeleteAuthorization","removeItem","get","url","post","data","alertSuccess","text","success","error","loggedInUserUpdate","user","dispatch","type","emailRule","required","numberRule","nameRule","passwordRule","idRule","timeRule","dateRule","proceduresRule","diagnosisRule","operationStationRule","operationRoomRule","insuranceImageRule","iqamaImageRule","typeRule","NormalLoginForm","props","loading","login","callback","name","className","initialValues","email_address","password","onFinish","values","Item","rules","prefix","UserOutlined","placeholder","LockOutlined","href","htmlType","mapDispatchToProps","payload","CB","userLoggedIn","then","access_token","catch","console","log","connect","users","loginLoading","fields","label","GET_PATIENTS_API","ADD_PATIENT_API","GET_OPERATION_THEATER_API","GET_OPERATION_ROOMS_API","GET_ALL_OPERATIONS_API","UPDATE_OPERATION_API","CREATE_OPERATION_API","GET_DIAGNOSIS_API","GET_PROCEDURES_API","getAll","Common","Parser","require","getAllOperations","operations","operationsLoading","useState","selectedPatient","setSelectedPatient","modalVisibility","setModalVisibility","useEffect","columns","title","dataIndex","render","patient","ellipsis","created_by","full_name","defaultSortOrder","sorter","b","length","operation_theater","operation_room","procedure","diagnosis","moment","format","Date","date","width","key","record","onClick","Object","keys","icon","EyeOutlined","size","hideModal","setTimeout","exportOperations","csv","parse","filename","Math","floor","random","toString","substring","blob","Blob","saveAs","Container","disabled","dataSource","visible","footer","onOk","onCancel","okText","comment","time","TextArea","Input","Option","AutoComplete","AddForm","operationRooms","procedures","operationTheaters","patients","createOperation","createOperationLoading","Form","useForm","form","selectPatient","setSelectPatient","mrn","setMrn","setName","mobile_number","setMobileNumber","onReset","resetFields","handleChange","renderOptions","options","map","option","index","_id","autoCompleteChildren","array","key2","key3","object","value2","autoCompleteChildren2","onSelect","find","obj","getPatient","onChange","onNameFieldChanged","getFieldValue","selectObj","item","code","setFieldsValue","selected","filterOption","inputValue","indexOf","toUpperCase","fieldsValue","toISOString","procedureId","x","diagnoseId","Row","Col","xs","sm","md","lg","defaultValue","allowClear","onBlur","autoSize","minRows","maxRows","operationRoomsLoading","proceduresLoading","diagnosisLoading","operationTheatersLoading","patientsLoading","history","useHistory","push","normFile","e","file","formRef","React","createRef","state","iqama_image","insurance_image","current","setState","formdata","FormData","append","email","notes","addPatient","iqama","onRemove","beforeUpload","fileList","this","insurance","ref","getValueFromEvent","UploadOutlined","Component","addPatientLoading","goBack","ArrowLeftOutlined","confirm","Modal","UserForm","closeModal","addUser","addUserLoading","updateUser","updateLoading","getUsers","layout","id","Password","deleteUser","setVisible","setUser","showModal","filters","onFilter","ExclamationCircleOutlined","content","showDeleteConfirm","DeleteOutlined","EditOutlined","centered","maskClosable","menus","to","Header","links","useDispatch","useSelector","logoutFunc","Navbar","variant","Brand","Image","src","Nav","link","activeClassName","Dropdown","Toggle","initials","match","shift","pop","Menu","Footer","NotFount","image","imageStyle","height","description","BodyWithHeaderAndFooter","Element","Loading","LoadingOutlined","style","fontSize","spin","AdminRoutes","exact","path","component","Patients","Reports","AddPatient","DoctorRoutes","HospitalRoutes","AuthRouting","Login","App","renderRoutingWithRole","role","checkAuth","authLoading","checkAuthLoading","Boolean","window","location","hostname","initialState","updateOperationLoading","deleteUserLoading","action","store","createStore","combineReducers","reducers","applyMiddleware","thunk","baseURL","interceptors","request","use","Promise","reject","response","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3b7aab8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.87b7d54e.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter.cc647316.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.7fc7bf87.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.fab0b3b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.90de31e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/error-404.4c5d5fdc.svg\";","const Users = {\n\n    CHECK_AUTH_API: 'CHECK_AUTH_API',\n\n    LOGIN_USER_API: 'LOGIN_USER_API',\n\n    LOGOUT_USER_API: 'LOGOUT_USER_API',\n\n    SET_LOGGED_IN_USER: 'SET_LOGGED_IN_USER',\n    UPDATE_LOGGED_IN_USER: 'UPDATE_LOGGED_IN_USER',\n\n    GET_USERS_API: 'GET_USERS_API',\n    UPDATE_USER_API: 'UPDATE_USER_API',\n    ADD_USER_API: 'ADD_USER_API',\n    DELETE_USER_API: 'DELETE_USER_API'\n\n};\n\nexport default Users;\n","import axios from \"axios\";\nimport { message } from 'antd';\nmessage.config({\n    duration: 2,\n    maxCount: 1,\n});\n//base url\nexport const baseUrl = '/api/';\n\n// axios interceptor\nexport const interceptor = () => {\n    axios.defaults.baseURL = baseUrl;\n    getTokenAndSetIntoHeaders();\n    axios.interceptors.request.use(\n        function (config) {\n            return config;\n        },\n        function (error) {\n            return Promise.reject(error);\n        }\n    );\n    axios.interceptors.response.use(\n        function (response) {\n            let e1 = 'jwt must be provided';\n            let e2 = 'invalid signature';\n            if(response.data && response.data.error && (response.data.data[0] === e1 || response.data.data[0] === e2)) {\n                // alertError(response.data.data[0])\n            }\n            return response;\n        },\n        function (error) {\n            return Promise.reject(error);\n        }\n    );\n};\n\n//token key name into localStorage\nexport const ACCESS_TOKEN = 'ACCESS_TOKEN';\n\n// get token into local storage and set into headers function\nexport const getTokenAndSetIntoHeaders = async (token) => {\n    if(token){\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        let accessToken = await localStorage.getItem(ACCESS_TOKEN);\n        if (accessToken) {\n            axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n        }\n    }\n};\n\n//set token into local storage\nexport const setTokenInToLocalStorage = async (value) => {\n    try {\n        await localStorage.setItem(ACCESS_TOKEN, value);\n    } catch (error) {\n        alertError(JSON.stringify(error))\n    }\n};\n\n//set token into local storage\nexport const removeTokenInToLocalStorageAndDeleteAuthorization = () => {\n    localStorage.removeItem(ACCESS_TOKEN);\n    delete axios.defaults.headers.common['Authorization'];\n};\n\n// generate random id function\nexport const uuid = () => {\n        let s4 = () => {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        };\n        //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n        // return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n        return s4();\n};\n\n//axios get method\nexport const get = (url) => {\n    return axios.get(url)\n};\n\n//axios post method\nexport const post = (url, data) => {\n    return axios.post(url, data)\n};\n// toasts\n//success toast\nexport const alertSuccess = (text) => {\n    message.success(text);\n};\n//error toast\nexport const alertError = (text) => {\n    message.error(text);\n};\n//warning toast\nexport const alertWarning = (text) => {\n    message.warning(text);\n};\n","import Users from \"../constants/Users\";\nimport {\n    get,\n    post,\n    alertSuccess,\n    alertError,\n    setTokenInToLocalStorage,\n    ACCESS_TOKEN,\n    removeTokenInToLocalStorageAndDeleteAuthorization, interceptor, getTokenAndSetIntoHeaders\n} from '../helper';\n\nexport const checkAuth = (CB) => async (dispatch) => {\n    dispatch({type: Users.CHECK_AUTH_API, loading: true, userLoggedIn: false});\n    let accessToken = await localStorage.getItem(ACCESS_TOKEN);\n    if(accessToken) {\n        get('admins/checkAuth')\n            .then(({data}) => {\n                if (!data.error) {\n                    let user = data.data[0];\n                    dispatch(loggedInUserUpdate(user));\n                    dispatch({type: Users.CHECK_AUTH_API, loading: false, userLoggedIn: true});\n                    CB && CB()\n                } else {\n                    removeTokenInToLocalStorageAndDeleteAuthorization();\n                    alertError(data.data[0]);\n                    dispatch({type: Users.CHECK_AUTH_API, loading: false, userLoggedIn: false});\n                }\n            })\n            .catch((error) => {\n                dispatch({type: Users.CHECK_AUTH_API, loading: false, userLoggedIn: false});\n                console.log('error', error)\n            });\n    } else {\n        dispatch({type: Users.CHECK_AUTH_API, loading: false, userLoggedIn: false});\n    }\n};\n\nexport const login = (payload, CB) => (dispatch) => {\n    dispatch({type: Users.LOGIN_USER_API, loading: true, userLoggedIn: false});\n    post('admins/login', payload)\n        .then(({data}) => {\n            if (!data.error) {\n                let user = data.data[0];\n                dispatch({type: Users.LOGIN_USER_API, loading: false, userLoggedIn: true});\n                setTokenInToLocalStorage(user.access_token);\n                getTokenAndSetIntoHeaders(user.access_token);\n                alertSuccess('Successfully Login');\n                dispatch(loggedInUserUpdate(user));\n                CB && CB();\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Users.LOGIN_USER_API, loading: false, userLoggedIn: false});\n            }\n        })\n        .catch((error) => {\n            alertError('Something went wrong please try again');\n            dispatch({type: Users.LOGIN_USER_API, loading: false, userLoggedIn: false});\n            console.log('error', error)\n        });\n};\n\nexport const logout = () => (dispatch) =>  {\n    dispatch({type: Users.LOGOUT_USER_API});\n    removeTokenInToLocalStorageAndDeleteAuthorization();\n    alertSuccess('Successfully logout')\n};\n\nexport const loggedInUserUpdate = (user) => (dispatch) => {\n    dispatch({type: Users.SET_LOGGED_IN_USER, user: user});\n};\n\nexport const getUsers = () => (dispatch) => {\n    dispatch({type: Users.GET_USERS_API, loading: true, users: []});\n    get('admins/get')\n        .then(({data}) => {\n            if (!data.error) {\n                dispatch({type: Users.GET_USERS_API, loading: false, users: data.data});\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Users.GET_USERS_API, loading: false, users: []});\n            }\n        })\n        .catch((error) => {\n            dispatch({type: Users.GET_USERS_API, loading: false, users: []});\n            console.log('error', error)\n        });\n};\n\nexport const updateUser = (payload, CB) => (dispatch) => {\n    dispatch({type: Users.UPDATE_USER_API, loading: true});\n    post('admins/update', payload)\n        .then(({data}) => {\n            if (!data.error) {\n                alertSuccess('Successfully update user');\n                dispatch({type: Users.UPDATE_USER_API, loading: false});\n                CB && CB();\n            } else {\n                 alertError(data.data[0]);\n                dispatch({type: Users.UPDATE_USER_API, loading: false});\n            }\n        })\n        .catch((error) => {\n            alertError('Something went wrong please try again');\n            dispatch({type: Users.UPDATE_USER_API, loading: false});\n            console.log('error', error)\n        });\n};\n\nexport const addUser = (payload, CB) => (dispatch) => {\n    dispatch({type: Users.ADD_USER_API, loading: true});\n    post('admins/create', payload)\n        .then(({data}) => {\n            if (!data.error) {\n                alertSuccess('Successfully add user');\n                dispatch({type: Users.ADD_USER_API, loading: false});\n                CB && CB();\n            } else {\n                alertError('Something went wrong please try again');\n                dispatch({type: Users.ADD_USER_API, loading: false});\n            }\n        })\n        .catch((error) => {\n            alertError('Something went wrong please try again');\n            dispatch({type: Users.ADD_USER_API, loading: false});\n            console.log('error', error)\n        });\n};\n\nexport const deleteUser = (payload, CB) => (dispatch) => {\n    dispatch({type: Users.DELETE_USER_API, loading: true});\n    post('admins/remove', payload)\n        .then(({data}) => {\n            if (!data.error) {\n                alertSuccess('Successfully delete user');\n                dispatch({type: Users.DELETE_USER_API, loading: false});\n                CB && CB();\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Users.DELETE_USER_API, loading: false});\n            }\n        })\n        .catch((error) => {\n            alertError('Something went wrong please try again');\n            dispatch({type: Users.DELETE_USER_API, loading: false});\n            console.log('error', error)\n        });\n};\n","import React from \"react\";\n\nconst emailRule = [\n    {\n        type: 'email',\n        message: 'The input is not valid Email!',\n    },\n    {\n        required: true,\n        message: 'Please input your Email!',\n    },\n];\nconst numberRule = [\n    {\n        required: true,\n        message: 'Please enter mobile number!',\n    },\n];\nconst nameRule = [\n    {\n        required: true,\n        message: 'Please enter name!',\n    },\n];\nconst passwordRule = [\n    {\n        required: true,\n        message: 'Please enter password!',\n    },\n];\nconst mrnRule = [\n    {\n        required: true,\n        message: 'Please enter MRN number!',\n    },\n];\nconst idRule = [\n    {\n        required: true,\n        message: 'Please enter Id number!',\n    },\n];\nconst timeRule = [\n    {\n        type: 'object',\n        required: true,\n        message: 'Please select time!',\n    },\n];\nconst dateRule = [\n    {\n        type: 'object',\n        required: true,\n        message: 'Please select time!',\n    },\n];\n\nconst proceduresRule = [\n    {\n        required: true,\n        message: 'Please select procedures!',\n    },\n];\nconst diagnosisRule = [\n    {\n        required: true,\n        message: 'Please select diagnosis!',\n    },\n];\nconst operationStationRule = [\n    {\n        required: true,\n        message: 'Please select operation station!',\n    },\n];\nconst operationRoomRule = [\n    {\n        required: true,\n        message: 'Please select operation room!',\n    },\n];\nconst insuranceImageRule = [\n    {\n        required: true,\n        message: 'Please upload insurance image!',\n    },\n];\nconst iqamaImageRule = [\n    {\n        required: true,\n        message: 'Please upload iqama image!',\n    },\n];\nconst typeRule = [\n    {\n        required: true,\n        message: 'Please select a type',\n    },\n];\n\nexport {\n    emailRule,\n    numberRule,\n    nameRule,\n    passwordRule,\n    mrnRule,\n    idRule,\n    timeRule,\n    dateRule,\n    proceduresRule,\n    diagnosisRule,\n    operationRoomRule,\n    operationStationRule,\n    insuranceImageRule,\n    iqamaImageRule,\n    typeRule\n}\n","import React from 'react';\nimport {Form, Input, Button} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {connect} from \"react-redux\";\nimport {login} from \"../../../store/actions/Users\";\nimport {emailRule, passwordRule} from \"../../../common/rules\";\nimport { auth } from '../../../routing/index';\n\n\nconst NormalLoginForm = (props) => {\n\n    const { loading, login } = props;\n\n    const callback = () => {\n        // auth.authenticate();\n    };\n\n    const onFinish = values => {\n        login(values, callback)\n    };\n\n    return (\n        <Form name=\"normal_login\" className=\"login-form\" initialValues={{\n            email_address: '',\n            password: ''\n        }} onFinish={onFinish}>\n\n            <Form.Item name=\"email_address\" rules={emailRule}>\n                <Input className='c-input c-input-primary'\n                       prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Email\"/>\n            </Form.Item>\n\n            <Form.Item name=\"password\" rules={passwordRule}>\n                <Input className='c-input c-input-primary' prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                       type=\"password\"\n                       placeholder=\"Password\"/>\n            </Form.Item>\n\n            <div className=\"links\">\n                <a className=\"login-form-forgot\" href=\"\">\n                    Forgot password\n                </a>\n            </div>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\"\n                        loading={loading}\n                        className=\"c-button c-button-primary login-form-button\">\n                    Login\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nfunction Login(props) {\n    return (\n        <div className=\"auth\">\n            <div className=\"overlay\">\n                <div className=\"auth-card\">\n                    <h1 className=\"heading\"> Login </h1>\n                    <NormalLoginForm {...props}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToState = ({users}) => {\n    return {\n        loading: users.loginLoading\n    }\n};\nconst mapDispatchToProps = {\n    login\n};\nexport default connect(mapDispatchToState, mapDispatchToProps)(Login);\n","const fields = [\n    {\n        label: 'Name',\n        value: 'patient.name'\n    },\n    {\n        label: 'Doctor',\n        value: 'created_by.full_name'\n    },\n    {\n        label: 'Operation Theater',\n        value: 'operation_theater.name'\n    },\n    {\n        label: 'Operation Room',\n        value: 'operation_room.name'\n    },\n    {\n        label: 'Procedure',\n        value: 'procedure.name'\n    },\n    {\n        label: 'Diagnosis',\n        value: 'diagnosis.name'\n    },\n    {\n        label: 'Date',\n        value: 'date'\n    },\n    {\n        label: 'Time',\n        value: 'time'\n    },\n    {\n        label: 'Comment',\n        value: 'comment'\n    },\n];\n\nexport {\n    fields\n};\n","const common = {\n\n    //PATIENTS_API start here\n    GET_PATIENTS_API: 'GET_PATIENTS_API',\n    ADD_PATIENT_API: 'ADD_PATIENT_API',\n    //PATIENTS_API end here\n\n    // OPERATION APIS start here\n    GET_OPERATION_THEATER_API: 'GET_OPERATION_THEATER_API',\n    GET_OPERATION_ROOMS_API: 'GET_OPERATION_ROOMS_API',\n\n    GET_ALL_OPERATIONS_API: 'GET_ALL_OPERATIONS_API',\n    UPDATE_OPERATION_API: 'UPDATE_OPERATION_API',\n    CREATE_OPERATION_API: 'CREATE_OPERATION_API',\n    //OPERATION APIS end here\n\n    //GET_DIAGNOSIS start here\n    GET_DIAGNOSIS_API: 'GET_DIAGNOSIS_API',\n    //GET_DIAGNOSIS end here\n\n    //GET_PROCEDURES start here\n    GET_PROCEDURES_API: 'GET_PROCEDURES_API',\n    //GET_PROCEDURES end here\n\n};\n\nexport default common;","import {get, post, alertSuccess, alertError} from '../helper';\nimport Common from \"../constants/Common\";\n\n// Patients apis\nexport const getPatients = () => (dispatch) => {\n    dispatch({type: Common.GET_PATIENTS_API, loading: true, payload: []});\n    get('patients/get')\n        .then(({data}) => {\n            if (!data.error) {\n                dispatch({type: Common.GET_PATIENTS_API, loading: false, payload: data.data});\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Common.GET_PATIENTS_API, loading: false, payload: []});\n            }\n        })\n        .catch((error) => {\n            dispatch({type: Common.GET_PATIENTS_API, loading: false, payload: []});\n            console.log('error', error)\n        });\n};\nexport const addPatient = (payload, CB) => (dispatch) => {\n    dispatch({type: Common.ADD_PATIENT_API, loading: true});\n    post('patients/create', payload)\n        .then(({data}) => {\n            if (!data.error) {\n                alertSuccess('Successfully add patient');\n                CB && CB();\n                dispatch({type: Common.ADD_PATIENT_API, loading: false});\n                dispatch(getAll());\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Common.ADD_PATIENT_API, loading: false});\n            }\n        })\n        .catch((error) => {\n            alertError('Something went wrong please try again');\n            dispatch({type: Common.ADD_PATIENT_API, loading: false});\n            console.log('error', error)\n        });\n};\n\n// Operation Room and Theaters apis\nexport const getOperationRooms = () => (dispatch) => {\n    dispatch({type: Common.GET_OPERATION_ROOMS_API, loading: true, payload: []});\n    get('operationRooms/get')\n        .then(({data}) => {\n            if (!data.error) {\n                dispatch({type: Common.GET_OPERATION_ROOMS_API, loading: false, payload: data.data});\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Common.GET_OPERATION_ROOMS_API, loading: false, payload: []});\n            }\n        })\n        .catch((error) => {\n            dispatch({type: Common.GET_OPERATION_ROOMS_API, loading: false, payload: []});\n            console.log('error', error)\n        });\n};\nexport const getOperationTheaters = () => (dispatch) => {\n    dispatch({type: Common.GET_OPERATION_THEATER_API, loading: true, payload: []});\n    get('operationTheaters/get')\n        .then(({data}) => {\n            if (!data.error) {\n                dispatch({type: Common.GET_OPERATION_THEATER_API, loading: false, payload: data.data});\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Common.GET_OPERATION_THEATER_API, loading: false, payload: []});\n            }\n        })\n        .catch((error) => {\n            dispatch({type: Common.GET_OPERATION_THEATER_API, loading: false, payload: []});\n            console.log('error', error)\n        });\n};\n\n// Patients Operation apis\nexport const getAllOperations = () => (dispatch) => {\n    dispatch({type: Common.GET_ALL_OPERATIONS_API, loading: true, payload: []});\n    get('operations/get')\n        .then(({data}) => {\n            if (!data.error) {\n                dispatch({type: Common.GET_ALL_OPERATIONS_API, loading: false, payload: data.data});\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Common.GET_ALL_OPERATIONS_API, loading: false, payload: []});\n            }\n        })\n        .catch((error) => {\n            dispatch({type: Common.GET_ALL_OPERATIONS_API, loading: false, payload: []});\n            console.log('error', error)\n        });\n};\nexport const createOperation = (payload, CB) => (dispatch) => {\n    dispatch({type: Common.CREATE_OPERATION_API, loading: true});\n    post('operations/create', payload)\n        .then(({data}) => {\n            if (!data.error) {\n                alertSuccess('Successfully create operation');\n                CB && CB();\n                dispatch({type: Common.CREATE_OPERATION_API, loading: false});\n            } else {\n                alertError(data.data[0]);\n                alertError('Something went wrong please try again');\n                dispatch({type: Common.CREATE_OPERATION_API, loading: false});\n            }\n        })\n        .catch((error) => {\n            alertError('Something went wrong please try again');\n            dispatch({type: Common.CREATE_OPERATION_API, loading: false});\n            console.log('error', error)\n        });\n};\nexport const updateOperation = (payload, CB) => (dispatch) => {\n    dispatch({type: Common.UPDATE_OPERATION_API, loading: true});\n    post('operations/update', payload)\n        .then(({data}) => {\n            if (!data.error) {\n                alertSuccess('Successfully add patient');\n                CB && CB();\n                dispatch({type: Common.UPDATE_OPERATION_API, loading: false});\n            } else {\n                alertError(data.data[0]);\n                alertError('Something went wrong please try again');\n                dispatch({type: Common.UPDATE_OPERATION_API, loading: false});\n            }\n        })\n        .catch((error) => {\n            alertError('Something went wrong please try again');\n            dispatch({type: Common.UPDATE_OPERATION_API, loading: false});\n            console.log('error', error)\n        });\n};\n\n// Procedures api\nexport const getProcedures = () => (dispatch) => {\n    dispatch({type: Common.GET_PROCEDURES_API, loading: true, payload: []});\n    get('procedures/get')\n        .then(({data}) => {\n            if (!data.error) {\n                dispatch({type: Common.GET_PROCEDURES_API, loading: false, payload: data.data});\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Common.GET_PROCEDURES_API, loading: false, payload: []});\n            }\n        })\n        .catch((error) => {\n            dispatch({type: Common.GET_PROCEDURES_API, loading: false, payload: []});\n            console.log('error', error)\n        });\n};\n\n// Diagnosis api\nexport const getDiagnosis = () => (dispatch) => {\n    dispatch({type: Common.GET_DIAGNOSIS_API, loading: true, payload: []});\n    get('diagnosis/get')\n        .then(({data}) => {\n            if (!data.error) {\n                dispatch({type: Common.GET_DIAGNOSIS_API, loading: false, payload: data.data});\n            } else {\n                alertError(data.data[0]);\n                dispatch({type: Common.GET_DIAGNOSIS_API, loading: false, payload: []});\n            }\n        })\n        .catch((error) => {\n            dispatch({type: Common.GET_DIAGNOSIS_API, loading: false, payload: []});\n            console.log('error', error)\n        });\n};\n\nexport const getAll = () => (dispatch) => {\n    dispatch(getPatients());\n    dispatch(getOperationRooms());\n    dispatch(getOperationTheaters());\n    dispatch(getProcedures());\n    dispatch(getDiagnosis());\n};\n","import React, {useEffect, useState} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {Button, Modal, Table} from 'antd';\nimport {EyeOutlined, EditOutlined} from '@ant-design/icons';\nimport {connect} from \"react-redux\";\nimport { saveAs } from 'file-saver';\nimport moment from \"moment\";\nimport {uuid} from \"../../store/helper\";\nimport { fields } from \"../../common/josn2csv\";\nimport {getAllOperations} from \"../../store/actions/Common\";\nconst {Parser} = require('json2csv');\n\nfunction Reports(props) {\n\n    const {operations, operationsLoading} = props;\n    const [selectedPatient, setSelectedPatient] = useState({});\n    const [modalVisibility, setModalVisibility] = useState(false);\n\n    useEffect(() => props.getAllOperations(), []);\n\n    //table columns\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'patient',\n            render: patient => `${patient.name}`,\n            ellipsis: true\n        },\n        {\n            title: 'Doctor',\n            dataIndex: 'created_by',\n            render: created_by => created_by ? created_by.full_name : '',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => b.created_by.full_name.length - a.created_by.full_name.length,\n            ellipsis: true\n        },\n        {\n            title: 'Operation Theater',\n            dataIndex: 'operation_theater',\n            render: operation_theater => `${operation_theater.name}`,\n            ellipsis: true\n        },\n        {\n            title: 'Operation Room',\n            dataIndex: 'operation_room',\n            render: operation_room => `${operation_room.name}`,\n            ellipsis: true\n        },\n        {\n            title: 'Procedure',\n            dataIndex: 'procedure',\n            render: procedure => `${procedure.name}`,\n            ellipsis: true\n        },\n        {\n            title: 'Diagnosis',\n            dataIndex: 'diagnosis',\n            render: diagnosis => `${diagnosis.name}`,\n            ellipsis: true\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            defaultSortOrder: 'ascend',\n            render: text => <span>{moment(text).format('DD/MM/YYYY')}</span>,\n            sorter: (a, b) => new Date(b.date) - new Date(a.date),\n            width: 110\n        },\n        {\n            title: 'Time',\n            dataIndex: 'time',\n            render: text => <span>{moment(text).format('HH:mm:ss a')}</span>,\n            width: 110\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (record) => {\n                return (\n                    <div className=\"table-button-group\">\n                        <Button onClick={() => viewPatient(record)}\n                                className=\"c-icon-button\"\n                                icon={<EyeOutlined/>}\n                                size=\"large\"/>\n                        {/*<Button className=\"c-icon-button\" icon={<EditOutlined/>} size=\"large\"/>*/}\n                    </div>\n                )\n            },\n            width: 80\n        }\n    ];\n\n    //show modal\n    function viewPatient(patient) {\n        if (patient && Object.keys(patient).length) {\n            setSelectedPatient(patient);\n            setModalVisibility(true)\n        }\n    }\n\n    //hide modal\n    function hideModal() {\n        setTimeout(() => setSelectedPatient({}), 200);\n        setModalVisibility(false);\n    }\n\n    //export reports data\n    function exportOperations() {\n        const json2csvParser = new Parser({fields});\n        const csv = json2csvParser.parse(operations);\n        let filename = `report-${uuid()}.csv`;\n        let blob = new Blob([csv], {type: 'text/csv'});\n        saveAs(blob, filename);\n    }\n\n    return (\n        <div className=\"reports\">\n            <Container>\n                <div className=\"c-sub-header\">\n                    <h1 className=\"page-heading\">Reports</h1>\n                    <Button\n                        disabled={!(operations && operations.length)}\n                        onClick={() => exportOperations()}\n                            className='c-button c-button-primary'>\n                        Export\n                    </Button>\n                </div>\n            </Container>\n            <section className=\"c-section\">\n                <Container>\n                    <Table\n                        loading={operationsLoading}\n                        columns={columns}\n                        dataSource={operations}\n                    />\n                </Container>\n            </section>\n\n            <Modal\n                title=\"Patient\"\n                visible={modalVisibility}\n                footer={null}\n                onOk={hideModal}\n                onCancel={hideModal}\n                okText=\"Done\"\n                className=\"c-modal\">\n\n                <ul className=\"list\">\n                    <li className=\"list-item\">\n                        <span className=\"label\">Name :</span>\n                        <span className=\"value\">{selectedPatient.patient ? selectedPatient.patient.name : ''}</span>\n                    </li>\n                    <li className=\"list-item\">\n                        <span className=\"label\">Operation Theater :</span>\n                        <span className=\"value\">{selectedPatient.operation_theater ? selectedPatient.operation_theater.name : ''}</span>\n                    </li>\n                    <li className=\"list-item\">\n                        <span className=\"label\">Operation Room :</span>\n                        <span className=\"value\">{selectedPatient.operation_room ? selectedPatient.operation_room.name : ''}</span>\n                    </li>\n                    <li className=\"list-item\">\n                        <span className=\"label\">Procedure :</span>\n                        <span className=\"value\">{selectedPatient.procedure ? selectedPatient.procedure.name : ''}</span>\n                    </li>\n                    <li className=\"list-item\">\n                        <span className=\"label\">Diagnosis :</span>\n                        <span className=\"value\">{selectedPatient.diagnosis ? selectedPatient.diagnosis.name : ''}</span>\n                    </li>\n                    <li className=\"list-item\">\n                        <span className=\"label\">Comment :</span>\n                        <span className=\"value\">{selectedPatient.comment}</span>\n                    </li>\n                    <li className=\"list-item\">\n                        <span className=\"label\">Date :</span>\n                        <span className=\"value\">\n                            {moment(selectedPatient.date).format('DD/MM/YYYY')}\n                        </span>\n                    </li>\n                    <li className=\"list-item\">\n                        <span className=\"label\">Time :</span>\n                        <span className=\"value\">\n                            {moment(selectedPatient.time).format('HH:mm:ss a')}\n                        </span>\n                    </li>\n                </ul>\n\n            </Modal>\n        </div>\n    );\n}\n\nconst mapDispatchToState = ({common}) => {\n    return {\n        operations: common.operations,\n        operationsLoading: common.operationsLoading\n    }\n};\nconst mapDispatchToProps = {\n    getAllOperations\n};\nexport default connect(mapDispatchToState, mapDispatchToProps)(Reports);\n","import React, {useEffect, useState} from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport {Button, Form, Input, DatePicker, TimePicker, Select, AutoComplete} from 'antd';\nimport {useHistory} from \"react-router-dom\";\nimport { createOperation, getAll } from \"../../store/actions/Common\";\nimport {connect} from \"react-redux\";\nimport {\n    dateRule, timeRule, proceduresRule, diagnosisRule, operationRoomRule, operationStationRule\n} from \"../../common/rules\";\n\nconst {TextArea} = Input;\nconst {Option} = AutoComplete;\n\nconst AddForm = (props) => {\n\n    let {operationRooms, procedures, diagnosis, operationTheaters, patients, createOperation, createOperationLoading} = props;\n\n    const [form] = Form.useForm();\n\n    const [selectPatient, setSelectPatient] = useState('');\n    const [mrn, setMrn] = useState('');\n    const [name, setName] = useState('');\n    const [mobile_number, setMobileNumber] = useState('');\n\n    const onReset = () => {\n        form.resetFields();\n        setSelectPatient({});\n        setMrn('');\n        setName('');\n        setMobileNumber('');\n    };\n\n    const onFinish = fieldsValue => {\n        // Should format date value before submit.\n        const values = {\n            ...fieldsValue,\n            'date': fieldsValue['date'].toISOString(),\n            'time': fieldsValue['time'].toISOString(),\n        };\n        let payload = values;\n        payload.patient = selectPatient._id;\n        let procedureId = procedures.find(x => x.name === payload.procedure);\n        let diagnoseId = diagnosis.find(x => x.name === payload.diagnosis);\n        payload.procedure = procedureId._id;\n        payload.diagnosis = diagnoseId._id;\n        createOperation(payload, onReset);\n    };\n\n    function handleChange(value) {\n        // console.log(`selected ${value}`);\n    }\n\n    function renderOptions(options) {\n        if (options) {\n            return options.map((option, index) => (\n                <Select.Option key={index} value={option._id}>{option.name}</Select.Option>\n            ))\n        }\n        return null;\n    }\n\n    function getPatient(key, value) {\n        let patient = patients.find(obj => obj[key] === value);\n        if (patient) {\n            setSelectPatient(patient);\n            setMrn(patient.mrn ? patient.mrn : '');\n            setName(patient.name ? patient.name : '');\n            setMobileNumber(patient.mobile_number ? patient.mobile_number : '');\n        }\n    }\n\n    function autoCompleteChildren(array, key, key2, key3) {\n        if (array) {\n            return array.map((object, index) => <Option key={index} value2={object[key2]}\n                                                        value={object[key3 ? key3 : key]}> {object[key]} </Option>)\n        }\n        return null\n    }\n    function autoCompleteChildren2(array, key, key2) {\n        if (array) {\n            return array.map((object, index) => <Option key={index} value2={object[key2]}\n                                                        value={object[key]}> {object[key]} </Option>)\n        }\n        return null\n    }\n\n    const onSelect = (value, type) => {\n        getPatient(type, value);\n    };\n\n    const onChange = (text, type) => {\n        console.log('text', text)\n        if (type === 'mrn') {\n            setMrn(text);\n        } else if (type === 'name') {\n            setName(text);\n        } else if (type === 'mobile_number') {\n            setMobileNumber(text);\n        }\n    };\n\n    const onNameFieldChanged = (key, array) => {\n        let value = form.getFieldValue(key);\n        let selectObj = array ? array.find(item => item.code === value || item.name === value) : null;\n\n        form.setFieldsValue({\n            [key]: selectObj ? selectObj.name : ''\n        });\n    };\n\n    return (\n        <>\n\n            {patients && patients.length ? <div className=\"search-header\">\n\n                <p>Search : </p>\n\n                <AutoComplete\n                    name=\"mrn\"\n                    value={mrn}\n                    onSelect={selected => onSelect(selected, 'mrn')}\n                    onChange={text => onChange(text, 'mrn')}\n                    className=\"c-auto-complete\"\n                    placeholder=\"Search with MRN\"\n                    filterOption={(inputValue, option) => option.value.toString().indexOf(inputValue) !== -1}>\n                    {autoCompleteChildren(patients, 'mrn')}\n                </AutoComplete>\n                <AutoComplete\n                    name=\"name\"\n                    value={name}\n                    onSelect={selected => onSelect(selected, 'name')}\n                    onChange={text => onChange(text, 'name')}\n                    className=\"c-auto-complete\"\n                    placeholder=\"Patient Name\"\n                    filterOption={(inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}>\n                    {autoCompleteChildren( patients, 'name')}\n                </AutoComplete>\n                <AutoComplete\n                    name=\"mobile_number\"\n                    value={mobile_number}\n                    onSelect={selected => onSelect(selected, 'mobile_number')}\n                    onChange={text => onChange(text, 'mobile_number')}\n                    className=\"c-auto-complete\"\n                    placeholder=\"Phone Number\"\n                    filterOption={(inputValue, option) => option.value.indexOf(inputValue) !== -1}>\n                    {autoCompleteChildren(patients, 'mobile_number')}\n                </AutoComplete>\n\n            </div> : null}\n\n            <Form\n                name=\"add-patient-form\"\n                className=\"add-patient-form\"\n                form={form}\n                initialValues={{\n                    operation_theater: '',\n                    operation_room: '',\n                    date: '',\n                    time: '',\n                    procedure: '',\n                    diagnosis: '',\n                    comment: ''\n                }}\n                onFinish={onFinish}>\n                <Row>\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <Form.Item name=\"operation_theater\" label=\"Operation Station\" rules={operationStationRule}>\n                            <Select defaultValue=\"\" className=\"c-select\" onChange={handleChange}>\n                                <Select.Option value=\"\">Select Operation Station</Select.Option>\n                                {renderOptions(operationTheaters)}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <Form.Item name=\"operation_room\" label=\"Operation Room\" rules={operationRoomRule}>\n                            <Select defaultValue=\"\" className=\"c-select\" onChange={handleChange}>\n                                <Select.Option value=\"\">Select Operation Room</Select.Option>\n                                {renderOptions(operationRooms)}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} sm={6}>\n                        <Form.Item name=\"date\" label=\"Date\" rules={dateRule}>\n                            <DatePicker className=\"c-picker\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col xs={12} sm={6}>\n                        <Form.Item name=\"time\" label=\"Time\" rules={timeRule}>\n                            <TimePicker className=\"c-picker\"/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <Form.Item name=\"procedure\" label=\"Procedures\" rules={proceduresRule}>\n                            <AutoComplete\n                                className=\"c-auto-complete\"\n                                placeholder=\"Search with code\"\n                                allowClear={true}\n                                onBlur={() => onNameFieldChanged('procedure', procedures)}\n                                filterOption={(inputValue, option) => option.value2.indexOf(inputValue) !== -1 }>\n                                {autoCompleteChildren2(procedures, 'name', 'code')}\n                            </AutoComplete>\n                        </Form.Item>\n                    </Col>\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <Form.Item name=\"diagnosis\" label=\"Diagnosis\" rules={diagnosisRule}>\n                            <AutoComplete\n                                className=\"c-auto-complete\"\n                                placeholder=\"Search with code\"\n                                allowClear={true}\n                                onBlur={() => onNameFieldChanged('diagnosis', diagnosis)}\n                                filterOption={(inputValue, option) => option.value2.indexOf(inputValue) !== -1 }>\n                                {autoCompleteChildren2(diagnosis, 'name', 'code')}\n                            </AutoComplete>\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Form.Item name=\"comment\" label=\"Comment\">\n                    <TextArea\n                        className='c-input c-input-primary'\n                        autoSize={{minRows: 5, maxRows: 5}}\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\"\n                            disabled={!selectPatient}\n                            loading={createOperationLoading}\n                            className=\"c-button c-button-primary login-form-button\">\n                        Update\n                    </Button>\n                </Form.Item>\n            </Form>\n        </>\n    );\n};\n\nfunction Patients(props) {\n\n    const history = useHistory();\n\n    useEffect(()=> {\n        props.getAll()\n    }, [])\n\n    return (\n        <div className=\"patients\">\n            <Container>\n                <div className=\"c-sub-header\">\n                    <h1 className=\"page-heading\">Patients</h1>\n                    <Button onClick={() => history.push('/patients/add')} className='c-button c-button-primary'>\n                        New Patient\n                    </Button>\n                </div>\n            </Container>\n            <section className=\"c-section\">\n                <Container>\n                    <div className=\"patient-form\">\n                        <AddForm {...props} />\n                    </div>\n                </Container>\n            </section>\n        </div>\n    );\n}\n\nconst mapDispatchToState = ({common}) => {\n    return {\n        operationRooms: common.operationRooms,\n        operationRoomsLoading: common.operationRoomsLoading,\n        procedures: common.procedures,\n        proceduresLoading: common.proceduresLoading,\n        diagnosis: common.diagnosis,\n        diagnosisLoading: common.diagnosisLoading,\n        operationTheaters: common.operationTheaters,\n        operationTheatersLoading: common.operationTheatersLoading,\n        patients: common.patients,\n        patientsLoading: common.patientsLoading,\n        createOperationLoading: common.createOperationLoading\n    }\n};\nconst mapDispatchToProps = {\n    createOperation,\n    getAll\n};\nexport default connect(mapDispatchToState, mapDispatchToProps)(Patients);\n","import React from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport {Button, Upload, Form, Input} from 'antd';\nimport {emailRule, idRule, insuranceImageRule, iqamaImageRule, mrnRule, nameRule, numberRule} from \"../../common/rules\";\nimport {ArrowLeftOutlined, UploadOutlined} from '@ant-design/icons';\nimport {useHistory} from \"react-router-dom\";\nimport { addPatient } from \"../../store/actions/Common\";\nimport {connect} from \"react-redux\";\n\nconst normFile = e => {\n    return e && e.file;\n};\n\nclass AddForm extends React.Component {\n    formRef = React.createRef();\n    state = {\n        iqama_image: [],\n        insurance_image: []\n    };\n\n    onReset = () => {\n        this.formRef.current.resetFields();\n        this.setState({\n            iqama_image: [],\n            insurance_image: []\n        })\n    };\n\n    onFinish = values => {\n        let formdata = new FormData();\n        formdata.append(\"name\", values.name);\n        formdata.append(\"mobile_number\", values.mobile_number);\n        formdata.append(\"email\", values.email);\n        formdata.append(\"iqama_image\", values.iqama_image);\n        formdata.append(\"insurance_image\", values.insurance_image);\n        formdata.append(\"notes\", values.notes);\n        this.props.addPatient(formdata, this.onReset)\n    };\n\n    render() {\n        const { TextArea } = Input;\n        const iqama = {\n            onRemove: file => {\n                this.setState(state => { return { iqama_image: [] }} );\n            },\n            beforeUpload: file => {\n                this.setState(state => ({ iqama_image: [file] }));\n                return false;\n            },\n            fileList: this.state.iqama_image\n        };\n        const insurance = {\n            onRemove: file => {\n                this.setState(state => { return { insurance_image: [] }});\n            },\n            beforeUpload: file => {\n                this.setState(state => ({ insurance_image: [file] }));\n                return false;\n            },\n            fileList: this.state.insurance_image\n        };\n        const { loading } = this.props;\n        return (\n            <Form name=\"add-patient-form\"\n                  ref={this.formRef}\n                  className=\"add-patient-form\"\n                  initialValues={{}}\n                  onFinish={this.onFinish}>\n\n                <Form.Item name=\"name\" label=\"Name\" rules={nameRule}>\n                    <Input className='c-input c-input-primary' type=\"text\"/>\n                </Form.Item>\n\n                <Row>\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <Form.Item name=\"mobile_number\" label=\"Mobile No.\" rules={numberRule}>\n                            <Input className='c-input c-input-primary' type=\"number\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <Form.Item name=\"email\" label=\"Email\" rules={emailRule}>\n                            <Input className='c-input c-input-primary' type=\"email\"/>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Form.Item name=\"idNo\" label=\"Id No.\" rules={idRule}>\n                    <Input className='c-input c-input-primary' type=\"number\"/>\n                </Form.Item>\n\n                <Row>\n                    <Col>\n                        <Form.Item\n                            name=\"iqama_image\"\n                            label=\"Iqama Attach file PDF or JPG\"\n                            getValueFromEvent={normFile}\n                            rules={iqamaImageRule}>\n                            <Upload {...iqama}>\n                                <Button>\n                                    <UploadOutlined/> Click to upload\n                                </Button>\n                            </Upload>\n                        </Form.Item>\n                    </Col>\n                    <Col>\n                        <Form.Item\n                            name=\"insurance_image\"\n                            label=\"Insurance Attach file PDF or JPG\"\n                            getValueFromEvent={normFile}\n                            rules={insuranceImageRule} >\n                            <Upload {...insurance}>\n                                <Button>\n                                    <UploadOutlined/> Click to upload\n                                </Button>\n                            </Upload>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Form.Item name=\"notes\" label=\"Notes\">\n                    <TextArea\n                        className='c-input c-input-primary'\n                        autoSize={{minRows: 5, maxRows: 5}}\n                    />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button\n                        type=\"primary\" htmlType=\"submit\"\n                        className=\"c-button c-button-primary login-form-button\"\n                        loading={loading}>\n                        Add\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nfunction AddPatient(props) {\n    const history = useHistory();\n    const { addPatient, loading } = props;\n    return (\n        <div className=\"patients\">\n            <Container>\n                <div className=\"c-sub-header\">\n                    <div className=\"back-button\" onClick={() => history.goBack()}>\n                        <ArrowLeftOutlined/>\n                    </div>\n                    <h1 className=\"page-heading\">Add patient</h1>\n                </div>\n            </Container>\n            <section className=\"c-section\">\n                <Container>\n                    <div className=\"card-form\">\n                        <AddForm\n                            addPatient={addPatient}\n                            loading={loading}\n                        />\n                    </div>\n                </Container>\n            </section>\n        </div>\n    );\n}\n\nconst mapDispatchToState = ({common}) => {\n    return {\n        loading: common.addPatientLoading\n    }\n};\nconst mapDispatchToProps = {\n    addPatient\n};\nexport default connect(mapDispatchToState, mapDispatchToProps)(AddPatient);\n// export default AddPatient;\n","import React, {useEffect, useState} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {Button, Table, Modal, Input, Form, Select} from \"antd\";\nimport {DeleteOutlined, EditOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\nimport {emailRule, nameRule, passwordRule, typeRule} from \"../../common/rules\";\nimport {addUser, deleteUser, getUsers, updateUser} from \"../../store/actions/Users\";\n\nconst {confirm} = Modal;\n\nconst UserForm = (props) => {\n\n    const {closeModal, addUser, addUserLoading, updateUser, updateLoading, getUsers, user, type} = props;\n\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        if(type === 'update') {\n            form.setFieldsValue({\n                full_name: user.full_name ? user.full_name : '',\n                email_address: user.email_address ? user.email_address : '',\n                type: user.type ? user.type : '',\n                password: user.password ? user.password : '',\n            });\n        }\n    }, [user])\n\n    const onReset = () => {\n        form.resetFields();\n        closeModal();\n        getUsers();\n    };\n\n   const onClose = () => {\n       form.resetFields();\n       closeModal();\n    };\n\n    // const onFinish = values => addUser(values, onReset);\n    const onFinish = values => {\n        if (type === 'update') {\n            delete values.password;\n            let payload = {\n                id: user._id,\n                ...values\n            };\n            updateUser(payload, onReset)\n        } else {\n            addUser(values, onReset)\n        }\n    };\n\n    return (\n        <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"add-user\"\n            onFinish={onFinish}\n            initialValues={{}}\n        >\n            <Form.Item name=\"full_name\" label=\"Name\" rules={nameRule}>\n                <Input className='c-input c-input-primary'/>\n            </Form.Item>\n\n            <Form.Item name=\"email_address\" label=\"Email\" rules={emailRule}>\n                <Input className='c-input c-input-primary'/>\n            </Form.Item>\n\n            <Form.Item name=\"type\" label=\"Type\" rules={typeRule}>\n                <Select\n                    placeholder=\"Select a type\"\n                    className=\"c-select\">\n                    <Select.Option value=\"doctor\">Docter</Select.Option>\n                    <Select.Option value=\"hospital\">Hospital</Select.Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"password\" label=\"Password\" rules={passwordRule} >\n                <Input.Password className='c-input c-input-primary'\n                    disabled={type === 'update'}\n                />\n            </Form.Item>\n\n            <div className=\"modal-footer\">\n                <Button onClick={() => onClose()}>\n                    Close\n                </Button>\n                <Button\n                    loading={type === 'update' ? updateLoading : addUserLoading}\n                    type=\"primary\"\n                    htmlType=\"submit\">\n                    Submit\n                </Button>\n            </div>\n        </Form>\n    );\n};\n\nconst UpdateForm = ({closeModal, updateUser, updateLoading, getUsers, user}) => {\n\n    const [form] = Form.useForm();\n\n    useEffect(()=> {\n        form.setFieldsValue({\n            full_name: user.full_name,\n            email_address: user.email_address,\n            type: user.type,\n            password: user.password,\n        });\n    }, [user])\n\n    const onReset = () => {\n        form.resetFields();\n        closeModal();\n        getUsers();\n    };\n\n    const onClose = () => {\n        closeModal(form);\n    };\n\n    const onFinish = values => {\n        delete values.password;\n        let payload = {\n            id: user._id,\n            ...values\n        };\n        updateUser(payload, onReset)\n    };\n\n    return (\n        <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"update-user\"\n            onFinish={onFinish}\n            initialValues={user}\n        >\n            <Form.Item name=\"full_name\" label=\"Name\" rules={nameRule}>\n                <Input className='c-input c-input-primary'/>\n            </Form.Item>\n\n            <Form.Item name=\"email_address\" label=\"Email\" rules={emailRule}>\n                <Input className='c-input c-input-primary'/>\n            </Form.Item>\n\n            <Form.Item name=\"type\" label=\"Type\" rules={typeRule}>\n                <Select\n                    placeholder=\"Select a type\"\n                    className=\"c-select\">\n                    <Select.Option value=\"doctor\">Docter</Select.Option>\n                    <Select.Option value=\"hospital\">Hospital</Select.Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"password\" label=\"Password\" rules={passwordRule} >\n                <Input.Password className='c-input c-input-primary' disabled={true} />\n            </Form.Item>\n\n            <div className=\"modal-footer\">\n                <Button onClick={() => onClose()}>\n                    Close\n                </Button>\n                <Button\n                    loading={updateLoading}\n                    type=\"primary\"\n                    htmlType=\"submit\">\n                    Update\n                </Button>\n            </div>\n        </Form>\n    );\n};\n\nfunction Users(props) {\n\n    const {users, loading, getUsers, deleteUser} = props;\n    const [visible, setVisible] = useState(false);\n    const [user, setUser] = useState({});\n\n    useEffect(() => getUsers(), []);\n\n    function showModal(user) {\n        setUser(user)\n        setVisible(true)\n    }\n    function hideModal() {\n        setVisible(false)\n    }\n\n\n    //delete user function with confirmation\n    function showDeleteConfirm(user) {\n        confirm({\n            title: 'Do you Want to delete these user?',\n            icon: <ExclamationCircleOutlined/>,\n            content: user ? user.full_name : '',\n            onOk() {\n                let payload = {\n                    id: user._id\n                };\n                deleteUser(payload, getUsers)\n            },\n            onCancel() {\n\n            },\n        });\n    }\n\n    //table columns\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'full_name',\n            ellipsis: true\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email_address',\n            ellipsis: true\n        },\n        {\n            title: 'Type',\n            dataIndex: 'type',\n            filters: [\n                {text: 'Admin', value: 'admin'},\n                {text: 'Doctor', value: 'doctor'},\n                {text: 'Hospital', value: 'hospital'},\n            ],\n            onFilter: (value, users) => users.type.indexOf(value) === 0,\n            ellipsis: true,\n            width: 120\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (record) => {\n                if (record.type !== 'admin') {\n                    return (\n                        <div className=\"table-button-group\">\n                            <Button onClick={() => showDeleteConfirm(record)}\n                                    className=\"c-icon-button\"\n                                    icon={<DeleteOutlined/>}\n                                    size=\"large\"/>\n                            <Button\n                                onClick={() => showModal(record)}\n                                className=\"c-icon-button\"\n                                icon={<EditOutlined/>}\n                                size=\"large\"/>\n                        </div>\n                    )\n                }\n                return null;\n            },\n            width: 120\n        }\n    ];\n\n    return (\n        <div className=\"patients\">\n            <Container>\n                <div className=\"c-sub-header\">\n                    <h1 className=\"page-heading\">Users</h1>\n                    <Button\n                        disabled={false}\n                        onClick={() => showModal()}\n                        className='c-button c-button-primary'>\n                        Add\n                    </Button>\n                </div>\n            </Container>\n            <section className=\"c-section\">\n                <Container>\n                    <Table\n                        loading={loading}\n                        columns={columns}\n                        dataSource={users}\n                    />\n                </Container>\n            </section>\n            <Modal\n                title={user && Object.keys(user).length ? 'Update User' : 'Add User'}\n                className=\"add-user-modal\"\n                visible={visible}\n                centered\n                footer={null}\n                maskClosable={false}\n                onCancel={hideModal}\n            >\n                <UserForm\n                    closeModal={hideModal}\n                    type={user && Object.keys(user).length ? 'update' : 'add'}\n                    user={user}\n                    {...props}\n                />\n            </Modal>\n\n\n        </div>\n    );\n}\n\nconst mapDispatchToState = ({users}) => {\n    return {\n        loading: users.loading,\n        addUserLoading: users.addUserLoading,\n        users: users.users,\n        updateLoading: users.updateLoading\n    }\n};\nconst mapDispatchToProps = {\n    getUsers,\n    addUser,\n    updateUser,\n    deleteUser\n};\nexport default connect(mapDispatchToState, mapDispatchToProps)(Users);\n","import React, {useState} from 'react';\nimport {Nav, Navbar, Container, Image, Dropdown} from \"react-bootstrap\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {logout} from '../../store/actions/Users';\n\nconst menus = [\n    {\n        to: '/reports',\n        title: 'Reports'\n    },\n    {\n        to: '/users',\n        title: 'Users'\n    }\n];\n\nfunction Header() {\n\n    const dispatch = useDispatch();\n\n    function renderMenu(links) {\n        if (links && links.length) {\n            return links.map((link, index) => {\n                return <NavLink to={link.to}\n                                className=\"nav-link\"\n                                activeClassName=\"nav-link-active\">\n                    {link.title}\n                </NavLink>\n            })\n        }\n        return null\n    }\n\n    const user = useSelector(({users}) => users.user);\n\n    function name(name = 'x z') {\n        if (name) {\n            let initials = name.match(/\\b\\w/g) || [];\n            initials = ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\n            return initials\n        }\n        return '';\n    };\n\n    function logoutFunc() {\n        dispatch(logout())\n    }\n\n    return (\n        <div className=\"c-header\">\n            <Navbar variant=\"light\">\n                <Container>\n                    <Navbar.Brand>\n                        <Link to=\"/\">\n                            <Image src={require('../../assets/images/logo.png')}/>\n                        </Link>\n                    </Navbar.Brand>\n\n                    {(user && user.type) === 'admin' ? <Nav className=\"ml-auto c-nav\">\n                        {renderMenu(menus)}\n                    </Nav> : null}\n\n                    <Dropdown className=\"user-menu\">\n                        <Dropdown.Toggle id=\"dropdown-basic\">\n                            <div className=\"user-info\">\n\n                                <div className=\"user-name\">\n                                    <span>{name(user.type)}</span>\n                                </div>\n                                <div className=\"user-email-and-name\">\n                                    <span>{user.full_name}</span>\n                                    <span>{user.email_address}</span>\n                                </div>\n                            </div>\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item onClick={() => logoutFunc()}>Logout</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                </Container>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport {Container, Row, Col, Image} from \"react-bootstrap\";\n\nfunction Footer() {\n    return (\n        <div className=\"c-footer\">\n            <Container>\n                <Row className=\"\">\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <p>© Dr. Samir Abbas Hospital</p>\n                    </Col>\n                    <Col xs={12} sm={6} md={6} lg={6}>\n                        <ul>\n                            <li>\n                                <a href=\"https://twitter.com/dsahospital?lang=en\">\n                                    <Image src={require('../../assets/svg/twitter.svg')}/>\n                                </a>\n                            </li>\n                            <li>\n                                <a href=\"https://www.facebook.com/DSAHospital/\">\n                                    <Image src={require('../../assets/svg/facebook.svg')}/>\n                                </a>\n                            </li>\n                            <li>\n                                <a href=\"https://www.youtube.com/channel/UCuPIk9PfFbWOPcGJn04ThCw?view_as=subscriber\">\n                                    <Image src={require('../../assets/svg/youtube.svg')}/>\n                                </a>\n                            </li>\n                            <li>\n                                <a href=\"https://www.instagram.com/dsahospital/\">\n                                    <Image src={require('../../assets/svg/instagram.svg')}/>\n                                </a>\n                            </li>\n                        </ul>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport {Empty, Button} from 'antd';\n\nfunction NotFount() {\n    return (\n        <Empty\n            image={require('../../assets/svg/error-404.svg')}\n            imageStyle={{height: 150}}\n            description={<span>Opps!</span>}\n        >\n            <Button\n                className=\"c-button c-button-secondary\"\n                type=\"primary\"\n                onClick={()=> {}}\n            >\n                Go Back\n            </Button>\n        </Empty>\n    )\n};\nexport default NotFount;","import React from 'react';\nimport {Header, Footer} from \"..\";\n\nconst BodyWithHeaderAndFooter = (Element) => props => {\n    return (\n        <div className=\"header-with-body\">\n            <Header/>\n            <div className=\"body\">\n                <Element {...props}/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\nexport default BodyWithHeaderAndFooter\n","import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst Loading = () => {\n    return(\n        <div className=\"loading\">\n            <LoadingOutlined style={{ fontSize: 48 }} spin />\n        </div>\n    )\n};\n\nexport default Loading\n","import React, {Fragment} from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {\n    Login,\n    Reports,\n    Patients,\n    AddPatient,\n    Users\n} from '../pages';\nimport {BodyWithHeaderAndFooter, NotFount} from \"../uiComponents\";\n\nfunction AdminRoutes() {\n    return (\n        <Fragment>\n            <Switch>\n                <Route exact path=\"/\" component={BodyWithHeaderAndFooter(Patients)}/>\n                <Route exact path=\"/reports\" component={BodyWithHeaderAndFooter(Reports)}/>\n                <Route exact path=\"/patients/add\" component={BodyWithHeaderAndFooter(AddPatient)}/>\n                <Route exact path=\"/users\" component={BodyWithHeaderAndFooter(Users)}/>\n                <Route path=\"*\" component={NotFount}/>\n            </Switch>\n        </Fragment>\n    )\n}\nfunction DoctorRoutes() {\n    return (\n        <Fragment>\n            <Switch>\n                <Route exact path=\"/\" component={BodyWithHeaderAndFooter(Patients)}/>\n                <Route exact path=\"/patients/add\" component={BodyWithHeaderAndFooter(AddPatient)}/>\n                <Route path=\"*\" component={NotFount}/>\n            </Switch>\n        </Fragment>\n    )\n}\nfunction HospitalRoutes() {\n    return (\n        <Fragment>\n            <Switch>\n                <Route exact path=\"/\" component={BodyWithHeaderAndFooter(Reports)}/>\n                <Route path=\"*\" component={NotFount}/>\n            </Switch>\n        </Fragment>\n    )\n}\nfunction AuthRouting() {\n    return (\n        <Fragment>\n            <Switch>\n                <Route exact path=\"/\" component={Login}/>\n                <Route path=\"*\" component={NotFount}/>\n            </Switch>\n        </Fragment>\n    )\n}\n\nexport {\n    AuthRouting,\n    AdminRoutes,\n    DoctorRoutes,\n    HospitalRoutes\n};\n","import React, {Component} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {AuthRouting, AdminRoutes, DoctorRoutes, HospitalRoutes} from \"./routing\";\nimport {getAll} from \"./store/actions/Common\";\nimport {connect} from \"react-redux\";\nimport Loading from \"./uiComponents/loading/Loading\";\nimport {checkAuth} from \"./store/actions/Users\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.checkAuth()\n    }\n\n\n    renderRoutingWithRole = (role = '') => {\n     switch (role) {\n          case \"admin\" :\n              return <AdminRoutes/>;\n          case \"doctor\" :\n              return <DoctorRoutes/>;\n          case \"hospital\" :\n              return <HospitalRoutes/>;\n          default :\n              return <AuthRouting/>\n      }\n    };\n\n    render() {\n        const {userLoggedIn, authLoading, user} = this.props;\n        return (\n            <div className=\"app-root\">\n                {authLoading ? <Loading/> : null}\n                <BrowserRouter>\n                    {this.renderRoutingWithRole(userLoggedIn ? user.type : '')}\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({users}) => {\n    return {\n        userLoggedIn: users.userLoggedIn,\n        authLoading: users.checkAuthLoading,\n        user: users.user\n    }\n};\nconst mapDispatchToProps = {\n    checkAuth,\n    getAll\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Common from '../constants/Common';\n\nconst initialState = {\n    operationRooms: [],\n    operationRoomsLoading: false,\n    procedures: [],\n    proceduresLoading: false,\n    diagnosis: [],\n    diagnosisLoading: false,\n    operationTheaters: [],\n    operationTheatersLoading: false,\n    patients: [],\n    patientsLoading: false,\n    operations: [],\n    operationsLoading: false,\n    addPatientLoading: false,\n    updateOperationLoading: false,\n    createOperationLoading: false\n};\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n        // Patients apis\n        case Common.GET_PATIENTS_API:\n            return {...state, patientsLoading: action.loading, patients: action.payload};\n        case Common.ADD_PATIENT_API:\n            return {...state, addPatientLoading: action.loading};\n\n        //  Patients Operation apis\n        case Common.GET_ALL_OPERATIONS_API:\n            return {...state, operationsLoading: action.loading, operations: action.payload};\n        case Common.UPDATE_OPERATION_API:\n            return {...state, updateOperationLoading: action.loading};\n        case Common.CREATE_OPERATION_API:\n            return {...state, createOperationLoading: action.loading};\n\n        // Operation Room and Theaters apis\n        case Common.GET_OPERATION_ROOMS_API:\n            return {...state, operationRoomsLoading: action.loading, operationRooms: action.payload};\n        case Common.GET_OPERATION_THEATER_API:\n            return {...state, operationTheatersLoading: action.loading, operationTheaters: action.payload};\n\n        // Procedures api\n        case Common.GET_PROCEDURES_API:\n            return {...state, proceduresLoading: action.loading, procedures: action.payload};\n\n        // Diagnosis api\n        case Common.GET_DIAGNOSIS_API:\n            return {...state, diagnosisLoading: action.loading, diagnosis: action.payload};\n\n        default:\n            return state;\n    }\n};","import Users from '../constants/Users';\n\nconst initialState = {\n    users: [\n        {\n            name: 'Muhammad Wasif Khanzada',\n            email: 'wasif@gmail.com',\n            password: 'hello123!',\n            role: 'doctor'\n        },\n        {\n            name: 'Muhammad Fasih Khanzada',\n            email: 'fasih@gmail.com',\n            password: 'hello123!',\n            role: 'doctor'\n        },\n        {\n            name: 'Muhammad Asif Khanzada',\n            email: 'asif@gmail.com',\n            password: 'hello123!',\n            role: 'doctor'\n        },\n        {\n            name: 'Muhammad Aeeteb Khanzada',\n            email: 'aeeteb@gmail.com',\n            password: 'hello123!',\n            role: 'doctor'\n        },\n        {\n            name: 'Muhammad Tahir Khanzada',\n            email: 'Tahir@gmail.com',\n            password: 'hello123!',\n            role: 'doctor'\n        },\n        {\n            name: 'Kamal Alam',\n            email: 'kamal@gmail.com',\n            password: 'hello123!',\n            role: 'user'\n        },\n        {\n            name: 'Umar Baig',\n            email: 'umar@gmail.com',\n            password: 'hello123!',\n            role: 'user'\n        },\n        {\n            name: 'Sohail',\n            email: 'sohail@gmail.com',\n            password: 'hello123!',\n            role: 'user'\n        },\n        {\n            name: 'Sajjad',\n            email: 'sajjad@gmail.com',\n            password: 'hello123!',\n            role: 'user'\n        },\n        {\n            name: 'Ahmer',\n            email: 'ahmer@gmail.com',\n            password: 'hello123!',\n            role: 'user'\n        },\n    ],\n    loading: false,\n    addUserLoading: false,\n    updateLoading: false,\n    loginLoading: false,\n    user: {},\n    checkAuthLoading: false,\n    userLoggedIn: false,\n    deleteUserLoading: false\n};\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n\n        case Users.CHECK_AUTH_API:\n            return {...state, checkAuthLoading: action.loading, userLoggedIn: action.userLoggedIn};\n\n        case Users.LOGIN_USER_API:\n            return {...state, loginLoading: action.loading, userLoggedIn: action.userLoggedIn};\n\n        case Users.LOGOUT_USER_API:\n            return {...state, userLoggedIn: false, user: {}};\n\n        case Users.SET_LOGGED_IN_USER:\n            return {...state, user: action.user};\n        case Users.UPDATE_LOGGED_IN_USER:\n            return {...state, user: action.user};\n\n        case Users.ADD_USER_API:\n            return {...state, addUserLoading: action.loading};\n\n        case Users.DELETE_USER_API:\n            return {...state, deleteUserLoading: action.loading};\n\n        case Users.UPDATE_USER_API:\n            return {...state, updateLoading: action.loading};\n\n        case Users.GET_USERS_API:\n            return {...state, loading: action.loading, users: action.users};\n\n        default:\n            return state;\n    }\n};\n","import common from './Common';\nimport users from './Users';\nexport default {\n    common,\n    users\n}\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\nimport reducers from './reducers/index';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\n\n// export const store = createStore(persistedReducer, {}, applyMiddleware(thunk, logger));\nexport const store = createStore(combineReducers(reducers), {}, applyMiddleware(thunk));","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport {interceptor} from \"./store/helper\";\n\ninterceptor();\n\nfunction Portal() {\n    return (\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    );\n}\n\nReactDOM.render(<Portal/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}